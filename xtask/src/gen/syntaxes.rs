// NOTE: Need to add to mod.rs if you want to use this. Unused currently, but may be useful in the
//       future

enum SyntaxType {
    Asp,
    HtmlAsp,
    ActionScript,
    AppleScript,
    Batch,
    CSharpBuild,
    CSharp,
    Cpp,
    C,
    Css,
    Clojure,
    D,
    Dmd,
    Diff,
    Erlang,
    HtmlErlang,
    GitAttributes,
    GitCommit,
    GitCommon,
    GitConfig,
    GitIgnore,
    GitLink,
    GitLog,
    GitMailmap,
    GitRebase,
    Go,
    GraphvizDot,
    Groovy,
    Html,
    Haskell,
    LiterateHaskell,
    Json,
    JavaServerPages,
    Java,
    JavaDoc,
    JavaProperties,
    JavaScript,
    JavascriptRegularExpressions,
    Bibtex,
    LatexLog,
    Latex,
    Tex,
    Lisp,
    Lua,
    MakeOutput,
    Makefile,
    Markdown,
    MultiMarkdown,
    Matlab,
    OCaml,
    OCamlLex,
    OCamlYacc,
    OCamlCamlp4,
    ObjectiveCpp,
    ObjectiveC,
    PhpSource,
    Php,
    PhpRegularExpressions,
    Pascal,
    Perl,
    Python,
    PythonRegularExpressions,
    RConsole,
    R,
    RDocumentation,
    RailsHtml,
    RailsJavaScript,
    RubyHaml,
    RubyOnRails,
    RailsSql,
    RegExp,
    RestructuredText,
    Ruby,
    Cargo,
    Rust,
    Sql,
    Scala,
    Bash,
    ShellUnixGeneric,
    CommandsBuiltinShellBash,
    TclHtml,
    Tcl,
    Textile,
    Xml,
    Yaml,
    Awk,
    Ada,
    Apache,
    AsciiDoc,
    ArmAssembly,
    X86_64Assembly,
    CMakeCHeader,
    CMakeCppHeader,
    CMake,
    CMakeCache,
    CMakeCommands,
    Csv,
    Cabal,
    CoffeeScript,
    CpuInfo,
    Crontab,
    Crystal,
    Dart,
    Dockerfile,
    DotEnv,
    Elixir,
    ElixirHtml,
    ElixirRegularExpressions,
    ElmCompileMessages,
    ElmDocumentation,
    Elm,
    Email,
    FSharp,
    Fish,
    FortranFixedForm,
    FortranModern,
    FortranNamelist,
    GFortranBuild,
    OpenMP,
    Fstab,
    Glsl,
    GraphQl,
    Groff,
    Group,
    TwigHTML,
    Hosts,
    Ini,
    BabelJavaScript,
    Jinja2HTML,
    JinjaTemplates,
    Jsonnet,
    Julia,
    Kotlin,
    Less,
    Llvm,
    Lean,
    LiveScript,
    Manpage,
    MediawikerPanel,
    MediawikiNg,
    MemInfo,
    Nginx,
    Nim,
    Ninja,
    Nix,
    OrgMode,
    Passwd,
    PowerShell,
    Protobuf,
    ProtobufText,
    Puppet,
    PureScript,
    Qml,
    Racket,
    Rego,
    RequirementsTxt,
    Resolv,
    Robot,
    Scss,
    Sass,
    Sls,
    Sml,
    Slim,
    Strace,
    Stylus,
    Solidity,
    Vyper,
    Jq,
    Svelte,
    Swift,
    SystemVerilog,
    SystemVerilogNavbar,
    Toml,
    TerraformJSON,
    Terraform,
    TodoTxt,
    TypeScript,
    TypsecriptReact,
    Verilog,
    VimHelp,
    VimL,
    VueComponent,
    Zig,
    CmdHelp,
    GnuPlot,
    HttpRequestResponse,
    Log,
    ShowNonprintable,
    SshConfigAuthorizedKeys,
    SshConfigKnownHosts,
    SshConfigPrivateKey,
    SshConfigSshCommon,
    SshConfigSshConfig,
    SshConfigSshCrypto,
    SshConfigSshdConfig,
    Syslog,
    Varlink,
}

impl SyntaxType {
    fn new(path: &Path) -> anyhow::Result<Self> {
        let mut rev_components = path.components().rev();
        let (dir, file) = match rev_components
            .next()
            .zip(rev_components.next())
            .and_then(|pair| match pair {
                (path::Component::Normal(file), path::Component::Normal(dir)) => {
                    dir.to_str().zip(file.to_str())
                }
                _ => None,
            }) {
            Some(pair) => pair,
            None => {
                return Err(anyhow::anyhow!(
                    "Path isn't known syntax: {}",
                    path.display()
                ))
            }
        };

        let file = file.strip_suffix(".sublime-syntax").with_context(|| {
            format!(
                "Path doesn't have `.sublime-syntax` ext: {}",
                path.display()
            )
        })?;
        let file = file.to_lowercase();
        let dir = dir.to_lowercase();

        let syntax = match (dir.as_str(), file.as_str()) {
            ("asp", "asp") => Self::Asp,
            ("asp", "html-asp") => Self::HtmlAsp,
            ("actionscript", "actionscript") => Self::ActionScript,
            ("applescript", "applescript") => Self::AppleScript,
            ("batch file", "batch file") => Self::Batch,
            ("c#", "build") => Self::CSharpBuild,
            ("c#", "c#") => Self::CSharp,
            ("c++", "c++") => Self::Cpp,
            ("c++", "c") => Self::C,
            ("css", "css") => Self::Css,
            ("clojure", "clojure") => Self::Clojure,
            ("d", "d") => Self::D,
            ("d", "dmd output") => Self::Dmd,
            ("diff", "diff") => Self::Diff,
            ("erlang", "erlang") => Self::Erlang,
            ("erlang", "html (erlang)") => Self::HtmlErlang,
            ("git formats", "git attributes") => Self::GitAttributes,
            ("git formats", "git commit") => Self::GitCommit,
            ("git formats", "git common") => Self::GitCommon,
            ("git formats", "git config") => Self::GitConfig,
            ("git formats", "git ignore") => Self::GitIgnore,
            ("git formats", "git link") => Self::GitLink,
            ("git formats", "git log") => Self::GitLog,
            ("git formats", "git mailmap") => Self::GitMailmap,
            ("git formats", "git rebase") => Self::GitRebase,
            ("go", "go") => Self::Go,
            ("graphviz", "dot") => Self::GraphvizDot,
            ("groovy", "groovy") => Self::Groovy,
            ("html", "html") => Self::Html,
            ("haskell", "haskell") => Self::Haskell,
            ("haskell", "literate haskell") => Self::LiterateHaskell,
            ("json", "json") => Self::Json,
            ("java", "java server pages (jsp)") => Self::JavaServerPages,
            ("java", "java") => Self::Java,
            ("java", "javadoc") => Self::JavaDoc,
            ("java", "javaproperties") => Self::JavaProperties,
            ("javascript", "javascript") => Self::JavaScript,
            ("javascript", "regular expressions (javascript)") => {
                Self::JavascriptRegularExpressions
            }
            ("latex", "bibtex") => Self::Bibtex,
            ("latex", "latex log") => Self::LatexLog,
            ("latex", "latex") => Self::Latex,
            ("latex", "tex") => Self::Tex,
            ("lisp", "lisp") => Self::Lisp,
            ("lua", "lua") => Self::Lua,
            ("makefile", "make output") => Self::MakeOutput,
            ("makefile", "makefile") => Self::Makefile,
            ("markdown", "markdown") => Self::Markdown,
            ("markdown", "multimarkdown") => Self::MultiMarkdown,
            ("matlab", "matlab") => Self::Matlab,
            ("ocaml", "ocaml") => Self::OCaml,
            ("ocaml", "ocamllex") => Self::OCamlLex,
            ("ocaml", "ocamlyacc") => Self::OCamlYacc,
            ("ocaml", "camlp4") => Self::OCamlCamlp4,
            ("objective-c", "objective-c++") => Self::ObjectiveCpp,
            ("objective-c", "objective-c") => Self::ObjectiveC,
            ("php", "php source") => Self::PhpSource,
            ("php", "php") => Self::Php,
            ("php", "regular expressions (php)") => Self::PhpRegularExpressions,
            ("pascal", "pascal") => Self::Pascal,
            ("perl", "perl") => Self::Perl,
            ("python", "python") => Self::Python,
            ("python", "regular expressions (python)") => Self::PythonRegularExpressions,
            ("r", "r console") => Self::RConsole,
            ("r", "r") => Self::R,
            ("r", "rd (r documentation)") => Self::RDocumentation,
            ("rails", "html (rails)") => Self::RailsHtml,
            ("rails", "javascript (rails)") => Self::RailsJavaScript,
            ("rails", "ruby haml") => Self::RubyHaml,
            ("rails", "ruby on rails") => Self::RubyOnRails,
            ("rails", "sql (rails)") => Self::RailsSql,
            ("regular expressions", "regexp") => Self::RegExp,
            ("restructuredtext", "restructuredtext") => Self::RestructuredText,
            ("ruby", "ruby") => Self::Ruby,
            ("rust", "cargo") => Self::Cargo,
            ("rust", "rust") => Self::Rust,
            ("sql", "sql") => Self::Sql,
            ("scala", "scala") => Self::Scala,
            ("shellscript", "bash") => Self::Bash,
            ("shellscript", "shell-unix-generic") => Self::ShellUnixGeneric,
            ("shellscript", "commands-builtin-shell-bash") => Self::CommandsBuiltinShellBash,
            ("tcl", "html (tcl)") => Self::TclHtml,
            ("tcl", "tcl") => Self::Tcl,
            ("textile", "textile") => Self::Textile,
            ("xml", "xml") => Self::Xml,
            ("yaml", "yaml") => Self::Yaml,
            ("awk", "awk") => Self::Awk,
            ("ada-sublime-syntax", "ada") => Self::Ada,
            ("02_extra", "apache") => Self::Apache,
            ("02_extra", "asciidoc") => Self::AsciiDoc,
            ("02_extra", "assembly (arm)") => Self::ArmAssembly,
            ("02_extra", "assembly (x86_64)") => Self::X86_64Assembly,
            ("cmake", "cmake c header") => Self::CMakeCHeader,
            ("cmake", "cmake c++ header") => Self::CMakeCppHeader,
            ("cmake", "cmake") => Self::CMake,
            ("cmake", "cmakecache") => Self::CMakeCache,
            ("cmake", "cmakecommands") => Self::CMakeCommands,
            ("02_extra", "csv") => Self::Csv,
            ("02_extra", "cabal") => Self::Cabal,
            ("02_extra", "coffeescript") => Self::CoffeeScript,
            ("02_extra", "cpuinfo") => Self::CpuInfo,
            ("crontab", "crontab") => Self::Crontab,
            ("02_extra", "crystal") => Self::Crystal,
            ("02_extra", "dart") => Self::Dart,
            ("syntaxes", "dockerfile") => Self::Dockerfile,
            ("02_extra", "dotenv") => Self::DotEnv,
            ("elixir", "elixir") => Self::Elixir,
            ("elixir", "html (eex)") => Self::ElixirHtml,
            ("elixir", "regular expressions (elixir)") => Self::ElixirRegularExpressions,
            ("syntaxes", "elm compile messages") => Self::ElmCompileMessages,
            ("syntaxes", "elm documentation") => Self::ElmDocumentation,
            ("syntaxes", "elm") => Self::Elm,
            ("email", "email") => Self::Email,
            ("fsharp", "f#") => Self::FSharp,
            ("fish", "fish") => Self::Fish,
            ("grammars", "fortranfixedform") => Self::FortranFixedForm,
            ("grammars", "fortranmodern") => Self::FortranModern,
            ("grammars", "fortrannamelist") => Self::FortranNamelist,
            ("grammars", "gfortranbuild") => Self::GFortranBuild,
            ("grammars", "openmp") => Self::OpenMP,
            ("02_extra", "fstab") => Self::Fstab,
            ("glsl", "glsl") => Self::Glsl,
            ("graphql", "graphql") => Self::GraphQl,
            ("man page", "man page") => Self::Groff,
            ("02_extra", "group") => Self::Group,
            ("02_extra", "html (twig)") => Self::TwigHTML,
            ("02_extra", "hosts") => Self::Hosts,
            ("02_extra", "ini") => Self::Ini,
            ("02_extra", "javascript (babel)") => Self::BabelJavaScript,
            ("syntaxes", "html (jinja2)") => Self::Jinja2HTML,
            ("syntaxes", "jinja templates") => Self::JinjaTemplates,
            ("jsonnet", "jsonnet") => Self::Jsonnet,
            ("julia", "julia") => Self::Julia,
            ("02_extra", "kotlin") => Self::Kotlin,
            ("syntaxes", "less") => Self::Less,
            ("llvm", "llvm") => Self::Llvm,
            ("02_extra", "lean") => Self::Lean,
            ("02_extra", "livescript") => Self::LiveScript,
            ("02_extra", "manpage") => Self::Manpage,
            ("mediawiki", "mediawikerpanel") => Self::MediawikerPanel,
            ("mediawiki", "mediawiking") => Self::MediawikiNg,
            ("02_extra", "meminfo") => Self::MemInfo,
            ("syntaxes", "nginx") => Self::Nginx,
            ("02_extra", "nim") => Self::Nim,
            ("02_extra", "ninja") => Self::Ninja,
            ("02_extra", "nix") => Self::Nix,
            ("02_extra", "org mode") => Self::OrgMode,
            ("02_extra", "passwd") => Self::Passwd,
            ("02_extra", "powershell") => Self::PowerShell,
            ("protobuf", "protobuf") => Self::Protobuf,
            ("protobuf", "protobuftext") => Self::ProtobufText,
            ("syntaxes", "puppet") => Self::Puppet,
            ("purescript", "purescript") => Self::PureScript,
            ("02_extra", "qml") => Self::Qml,
            ("02_extra", "racket") => Self::Racket,
            ("02_extra", "rego") => Self::Rego,
            ("02_extra", "requirementstxt") => Self::RequirementsTxt,
            ("02_extra", "resolv") => Self::Resolv,
            ("02_extra", "robot") => Self::Robot,
            ("syntaxes", "scss") => Self::Scss,
            ("syntaxes", "sass") => Self::Sass,
            ("sls", "sls") => Self::Sls,
            ("02_extra", "sml") => Self::Sml,
            ("02_extra", "slim") => Self::Slim,
            ("strace", "strace") => Self::Strace,
            ("02_extra", "stylus") => Self::Stylus,
            ("sublimeethereum", "solidity") => Self::Solidity,
            ("sublimeethereum", "vyper") => Self::Vyper,
            ("sublimejq", "jq") => Self::Jq,
            ("svelte", "svelte") => Self::Svelte,
            ("02_extra", "swift") => Self::Swift,
            ("systemverilog", "systemverilog") => Self::SystemVerilog,
            ("systemverilog", "navbar") => Self::SystemVerilogNavbar,
            ("toml", "toml") => Self::Toml,
            ("terraform", "json (terraform)") => Self::TerraformJSON,
            ("terraform", "terraform") => Self::Terraform,
            ("todotxt", "todotxt") => Self::TodoTxt,
            ("02_extra", "typescript") => Self::TypeScript,
            ("02_extra", "typsecriptreact") => Self::TypsecriptReact,
            ("02_extra", "verilog") => Self::Verilog,
            ("02_extra", "vimhelp") => Self::VimHelp,
            ("viml", "viml") => Self::VimL,
            ("vue", "vue component") => Self::VueComponent,
            ("syntaxes", "zig") => Self::Zig,
            ("syntaxes", "cmd-help") => Self::CmdHelp,
            ("02_extra", "gnuplot") => Self::GnuPlot,
            ("http-request-response", "http-request-response") => Self::HttpRequestResponse,
            ("02_extra", "log") => Self::Log,
            ("02_extra", "show-nonprintable") => Self::ShowNonprintable,
            ("ssh-config", "authorized keys") => Self::SshConfigAuthorizedKeys,
            ("ssh-config", "known hosts") => Self::SshConfigKnownHosts,
            ("ssh-config", "private key") => Self::SshConfigPrivateKey,
            ("ssh-config", "ssh common") => Self::SshConfigSshCommon,
            ("ssh-config", "ssh config") => Self::SshConfigSshConfig,
            ("ssh-config", "ssh crypto") => Self::SshConfigSshCrypto,
            ("ssh-config", "sshd config") => Self::SshConfigSshdConfig,
            ("02_extra", "syslog") => Self::Syslog,
            ("varlink", "varlink") => Self::Varlink,
            _ => todo!("return an error"),
        };

        Ok(syntax)
    }
}
